{"ast":null,"code":"var _jsxFileName = \"/Users/marvindaja/projects/CineMatch/cinematch/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [recommendations, setRecommendations] = useState([]);\n\n  // Fetch movie titles for autocomplete dropdown\n  const fetchMovieTitles = async query => {\n    if (query.length > 0) {\n      try {\n        const response = await axios.get(`/search?q=${query}`);\n        setSuggestions(response.data);\n      } catch (error) {\n        console.error('Error fetching movie titles:', error);\n      }\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  // Fetch recommendations for selected movie\n  const fetchRecommendations = async movieTitle => {\n    try {\n      const response = await axios.get(`/recommend?title=${movieTitle}`);\n      setRecommendations(response.data);\n    } catch (error) {\n      console.error('Error fetching recommendations:', error);\n    }\n  };\n\n  // Handle search bar input change\n  const handleSearchChange = e => {\n    const value = e.target.value;\n    setSearchTerm(value);\n    fetchMovieTitles(value); // Fetch matching movie titles as user types\n  };\n\n  // Handle movie selection from dropdown\n  const handleMovieSelect = movie => {\n    setSearchTerm(movie); // Set the selected movie title in the input field\n    setSelectedMovie(movie);\n    setSuggestions([]); // Clear suggestions\n    fetchRecommendations(movie); // Fetch recommendations for selected movie\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Recommender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: handleSearchChange,\n      placeholder: \"Search for a movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"suggestions-list\",\n      children: suggestions.map((movie, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleMovieSelect(movie),\n        children: movie\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), selectedMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Recommended Movies for \", selectedMovie]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendations-container\",\n        children: recommendations.movies && recommendations.movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: recommendations.posters[index],\n            alt: movie,\n            className: \"movie-poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"ZkYUUSzLqjJ9QKqorYnOaXvDhMM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Home","_s","searchTerm","setSearchTerm","suggestions","setSuggestions","selectedMovie","setSelectedMovie","recommendations","setRecommendations","fetchMovieTitles","query","length","response","get","data","error","console","fetchRecommendations","movieTitle","handleSearchChange","e","value","target","handleMovieSelect","movie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","map","index","onClick","movies","src","posters","alt","_c","$RefreshReg$"],"sources":["/Users/marvindaja/projects/CineMatch/cinematch/src/pages/Home.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Home = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [suggestions, setSuggestions] = useState([]);\n    const [selectedMovie, setSelectedMovie] = useState(null);\n    const [recommendations, setRecommendations] = useState([]);\n\n    // Fetch movie titles for autocomplete dropdown\n    const fetchMovieTitles = async (query) => {\n        if (query.length > 0) {\n            try {\n                const response = await axios.get(`/search?q=${query}`);\n                setSuggestions(response.data);\n            } catch (error) {\n                console.error('Error fetching movie titles:', error);\n            }\n        } else {\n            setSuggestions([]);\n        }\n    };\n\n    // Fetch recommendations for selected movie\n    const fetchRecommendations = async (movieTitle) => {\n        try {\n            const response = await axios.get(`/recommend?title=${movieTitle}`);\n            setRecommendations(response.data);\n        } catch (error) {\n            console.error('Error fetching recommendations:', error);\n        }\n    };\n\n    // Handle search bar input change\n    const handleSearchChange = (e) => {\n        const value = e.target.value;\n        setSearchTerm(value);\n        fetchMovieTitles(value);  // Fetch matching movie titles as user types\n    };\n\n    // Handle movie selection from dropdown\n    const handleMovieSelect = (movie) => {\n        setSearchTerm(movie);  // Set the selected movie title in the input field\n        setSelectedMovie(movie);\n        setSuggestions([]);  // Clear suggestions\n        fetchRecommendations(movie);  // Fetch recommendations for selected movie\n    };\n\n    return (\n        <div className=\"search-container\">\n            <h1>Movie Recommender</h1>\n            <input\n                type=\"text\"\n                value={searchTerm}\n                onChange={handleSearchChange}\n                placeholder=\"Search for a movie\"\n            />\n\n            {/* Movie suggestions dropdown */}\n            {suggestions.length > 0 && (\n                <ul className=\"suggestions-list\">\n                    {suggestions.map((movie, index) => (\n                        <li key={index} onClick={() => handleMovieSelect(movie)}>\n                            {movie}\n                        </li>\n                    ))}\n                </ul>\n            )}\n\n            {/* Display recommendations */}\n            {selectedMovie && (\n                <div>\n                    <h2>Recommended Movies for {selectedMovie}</h2>\n                    <div className=\"recommendations-container\">\n                        {recommendations.movies && recommendations.movies.map((movie, index) => (\n                            <div key={index} className=\"movie-card\">\n                                <img src={recommendations.posters[index]} alt={movie} className=\"movie-poster\" />\n                                <h2>{movie}</h2>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}